/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h> 
#include <dt-bindings/zmk/backlight.h> 

/ {
    combos {
        compatible = "zmk,combos";
        combo_dsklg {
            timeout-ms = <100>;
            key-positions = <24 52>;
            layers = <0>;
            bindings = <&kp LGUI>;
        };        
    };

    behaviors {
        fofunc: four_ffour {
            compatible = "zmk,behavior-mod-morph";
            label = "FOUR_FUNCFOUR";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        sleft: s_left {
            compatible = "zmk,behavior-mod-morph";
            label = "S_LEFT";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LEFT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        fright: f_right {
            compatible = "zmk,behavior-mod-morph";
            label = "R_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp RIGHT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
//   ------------------------------------------------------------------------------------------------------------
            //  0|  ESC  |  1  |  2  |  3   |  4   |  5   |                 |  6   |  7   |  8    |  9   |   0   |  [{   | 11
            // 12|  TAB  |  Q  |  W  |  E   |  R   |  T   |                 |  Y   |  U   |  I    |  O   |   P   |    ]} | 23
            // 24|  CAPS |  A  |  S  |  D   |  F   |  G   |                 |  H   |  J   |  K    |  L   |   ;:  |   "'  | 37
            // 38| LSHIFT|  Z  |  X  |  C   |  V   |  B   |   RS  |  |  LW  |  N   |  M   |  <,   |  >.  |   ?/  |   |\  | 51
            // 52                    |  DEL |  ALT | SPACE| ENTER |  |BSPC  | INS  | CTRL | RGUI  |                        59
            bindings = <
&kp ESC   & kp ESC & kp N1 & kp N2 & kp N3 & kp N4 & kp N5 & kp N6 & kp N7 & kp N8 & kp N9 & kp N0 & kp LBKT
            & kp TAB & kp Q  & kp W  & kp E & kp R & kp T & kp Y & kp U & kp I & kp O & kp P & kp RBKT
            & kp CAPS & kp A  & kp S  & kp D & kp F & kp G & kp H & kp J & kp K & kp L & kp SEMI & kp SQT
            & kp LSHIFT & kp Z  & kp X  & kp C & kp V & kp B & to 2 & to 1 & kp N & kp M & kp COMMA & kp DOT & kp FSLH & kp BSLH
            & kp DEL & kp LALT & kp SPACE & kp RET & kp BSPC & kp INS & RCTRL & kp RGUI  
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
            // |  F11 |  F1 |  F2 |  F3  |  F4  |  F5  |                 |  F6  |  F7 | F8  |  F9  |  F10  |  F12  |
            // |PG_UP |     |     |      |      |      |                 |   7  |  8  |  9  |  +   |   (   |  Â·~  |
            // |PG_DN |     |     |      |  UP  |      |                 |   4  |  5  |  6  |  -   |    )  |   -_  |
            // |LSHIFT|     |     | LEFT | DOWN |RIGHT |  DE  |  |       |   1  |  2  |  3  |  *   |       |   =+  |
            //                    |      |      |      |      |  |   =   |   0  |  .  |  /  |
            bindings = <
            & kp F11 & kp F1 & kp F2 & kp F3 & kp F4 & kp F5 & kp F6 & kp F7 & kp F8 & kp F9 & kp F10 & kp F12
            & kp PG_UP & trans & trans & trans & trans & trans & kp KP_N7 & kp KP_N8 & kp KP_N9 & kp KP_PLUS & kp KP_LPAR & kp GRAVE
            & kp PG_DN & trans & trans & trans & kp UP & trans & kp KP_N4 & kp KP_N5 & kp KP_N6 & kp KP_MINUS & kp KP_RPAR & kp MINUS
            & kp LSHIFT& trans & trans & kp LEFT & kp DOWN & kp RIGHT & to 0 & trans & kp KP_N1 & kp KP_N2 & kp KP_N3 & kp KP_MULTIPLY & trans & kp EQUAL
            & trans & trans & trans & trans & kp KP_EQUAL & kp KP_N0 & kp KP_DOT & kp KP_DIVIDE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP >;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
            // |BT_CLR | BT1   | BT2   |  BT3   |  BT4  |  BT5  |                |OUTTOG|OUTUSB|OUTBLE|      |       |       |
            // |RGB_TOG|RGB_HUI|RGB_HUD|RGB_SAI |RGB_SAD|       |                |      |      |      |      |       |       |
            // |RGB_BRI|RGB_BRD|RGB_SPI|RGB_SPD |RGB_EFF|RGB_EFR|                |      |      |      |      |       |       |
            // |BL_TOG |BL_INC |BL_DEC |BL_CYCLE|       |       |     |   |  DE  |      |      |      |      |       |       |
            //                         |        |       |       |RESET|   |      |      |      |      |
            bindings = <
            & bt BT_CLR & bt BT_SEL 0 & bt BT_SEL 1 & bt BT_SEL 2 & bt BT_SEL 3 & bt BT_SEL 4 & out OUT_TOG & out OUT_USB & out OUT_BLE & trans & trans & trans
            & rgb_ug RGB_TOG & rgb_ug RGB_HUI & rgb_ug RGB_HUD & rgb_ug RGB_SAI & rgb_ug RGB_SAD & trans & trans & trans & trans & trans & trans & trans
            & rgb_ug RGB_BRI & rgb_ug RGB_BRD & rgb_ug RGB_SPI & rgb_ug RGB_SPD & rgb_ug RGB_EFF & rgb_ug RGB_EFR & trans & trans & trans & trans & trans & trans
            & bl BL_TOG & bl BL_INC & bl BL_DEC & bl BL_CYCLE & trans & trans & trans & to 0 & trans & trans & trans & trans & trans & trans
            & trans & trans & trans & reset & trans & trans & trans & trans    &trans   
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP >;
        };
    };
};
